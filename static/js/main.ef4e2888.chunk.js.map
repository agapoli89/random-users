{"version":3,"sources":["components/UsersList.js","components/ButtonFetchUsers.js","components/App.js","reportWebVitals.js","index.js"],"names":["UsersList","props","users","map","user","className","src","picture","large","alt","name","last","title","first","email","login","md5","ButtonFetchUsers","style","padding","border","backgroundColor","margin","onClick","click","bind","fetchedUsersNumber","text","API","App","state","handleDataFetch","usersNumber","fetch","then","response","ok","Error","json","data","Number","setState","results","prevState","concat","catch","error","console","log","this","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAeeA,EAbG,SAAAC,GACd,IAAMC,EAAQD,EAAMC,MAAMC,KAAI,SAAAC,GAAI,OAC9B,qBAAyBC,UAAU,OAAnC,UACI,qBAAKC,IAAKF,EAAKG,QAAQC,MAAOC,IAAKL,EAAKM,KAAKC,OAC7C,uCAAQP,EAAKM,KAAKE,MAAlB,YAA2BR,EAAKM,KAAKG,MAArC,YAA8CT,EAAKM,KAAKC,QACxD,4BAAIP,EAAKU,UAHJV,EAAKW,MAAMC,QAMxB,OACI,oBAAIX,UAAU,QAAd,SAAuBH,KCFhBe,EATU,SAAAhB,GAAK,OAC1B,wBAAQiB,MAAO,CACXC,QAAS,YACTC,OAAQ,kBACRC,gBAAiB,QACjBC,OAAQ,QACTC,QAAStB,EAAMuB,MAAMC,K,UAAWxB,EAAMyB,oBALzC,SAK+DzB,EAAM0B,QCDnEC,EAAM,sCA4CGC,E,4MAzCbC,MAAQ,CACN5B,MAAO,I,EAGT6B,gBAAkB,SAACC,GACjBC,MAAM,GAAD,OAAIL,GAAJ,OAAUI,IACdE,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAET,MAAME,MAAM,sBAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASG,UAC1BJ,MAAK,SAAAK,GACJ,GAA4B,IAAxBC,OAAOR,GACT,EAAKS,SAAS,CACZvC,MAAOqC,EAAKG,eAET,GAA4B,IAAxBF,OAAOR,GAAoB,CACpC,IAAM5B,EAAOmC,EAAKG,QAClB,EAAKD,UAAS,SAAAE,GAAS,MAAK,CAC5BzC,MAAOyC,EAAUzC,MAAM0C,OAAOxC,WAIjCyC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,O,4CAG9B,WACE,IAAM5C,EAAQ+C,KAAKnB,MAAM5B,MAEzB,OACE,sBAAKG,UAAU,MAAf,UACE,cAAC,EAAD,CAAkBmB,MAAOyB,KAAKlB,gBAAiBJ,KAAK,oCAAuBD,mBAAmB,MAC9F,cAAC,EAAD,CAAkBF,MAAOyB,KAAKlB,gBAAiBJ,KAAK,kCAA6BD,mBAAmB,MACnGxB,EAAMgD,OAAS,EAAI,cAAC,EAAD,CAAWhD,MAAOA,IAAWA,S,GApCvCiD,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ef4e2888.chunk.js","sourcesContent":["import './UsersList.css';\r\n\r\nconst UsersList = props => {\r\n    const users = props.users.map(user => (\r\n        <li key={user.login.md5} className=\"user\">\r\n            <img src={user.picture.large} alt={user.name.last}/>\r\n            <h4>{`${user.name.title} ${user.name.first} ${user.name.last}`}</h4>\r\n            <p>{user.email}</p>\r\n        </li>\r\n      ))\r\n    return (\r\n        <ul className=\"users\">{users}</ul>\r\n    )\r\n}\r\n\r\nexport default UsersList;","const ButtonFetchUsers = props => (\r\n    <button style={{\r\n        padding: '10px 20px',\r\n        border: '2px solid black',\r\n        backgroundColor: 'white',\r\n        margin: '20px'\r\n    }} onClick={props.click.bind(this, props.fetchedUsersNumber)}>{props.text}</button>\r\n)\r\n\r\nexport default ButtonFetchUsers;","import './App.css';\nimport UsersList from './UsersList';\nimport ButtonFetchUsers from './ButtonFetchUsers';\nimport { Component } from 'react';\n\nconst API = 'https://randomuser.me/api/?results=';\n\nclass App extends Component {\n  state = {\n    users: [],\n  }\n\n  handleDataFetch = (usersNumber) => {\n    fetch(`${API}${usersNumber}`)\n    .then(response => {\n      if (response.ok) {\n        return response;\n      }\n      throw Error(\"Błąd!\");\n    })\n    .then(response => response.json())\n    .then(data => {\n      if (Number(usersNumber) === 5) {\n        this.setState({\n          users: data.results,\n        })\n      } else if (Number(usersNumber) === 1) {\n        const user = data.results;\n        this.setState(prevState => ({\n        users: prevState.users.concat(user)\n      }))\n      }\n    })\n    .catch(error => console.log(error))\n  }\n\n  render() {\n    const users = this.state.users;\n\n    return (\n      <div className=\"App\">\n        <ButtonFetchUsers click={this.handleDataFetch} text=\"Pokaż 5 użytkowników\" fetchedUsersNumber=\"5\"/>\n        <ButtonFetchUsers click={this.handleDataFetch} text=\"Dodaj użytkownika do listy\" fetchedUsersNumber=\"1\"/>\n       { users.length > 0 ? <UsersList users={users}/> : users}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}